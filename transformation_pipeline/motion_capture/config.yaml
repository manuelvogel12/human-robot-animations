
JOINTS_HIERARCHY:
  'ROOT': ["lower back_RX"]
  'lower back_RX': ["L collar_RX"]
  'head_RX': []

  'L collar_RX': ["head_RX", "L humerus_RX", "R humerus_RX" ]
  'L humerus_RX': ["L elbow_RX"]
  'L elbow_RX': ["L wrist_RX"]
  'L wrist_RX': []

  'R humerus_RX': [ "R elbow_RX" ]
  'R elbow_RX': [ "R wrist_RX" ]
  'R wrist_RX': []

ROOT_JOINT: 'lower back_RX'

BONE_HIERARCHY:
  'hip': ['torso']
  'torso': ['neck', 'left_collar', 'right_collar']
  'neck': ['neck_end']
  'neck_end': []
  'left_collar': ['left_upper_arm']
  'left_upper_arm': ['left_forearm']
  'left_forearm': ['left_forearm_end']
  'left_forearm_end': []
  'right_collar': ['right_upper_arm']
  'right_upper_arm': ['right_forearm']
  'right_forearm': ['right_forearm_end']
  'right_forearm_end': []

BONE_END_BVH_NAME:
  'neck_end': 'head'
  'left_forearm_end': 'left_hand'
  'right_forearm_end': 'right_hand'

ROOT_BONE: 'hip'

BONE_BEGIN_AT_JOINT:
  'hip': 'lower back_RX'
  'torso': 'lower back_RX'
  'neck': 'L collar_RX'
  'neck_end': 'head_RX'
  'left_collar': 'L collar_RX'
  'left_upper_arm': 'L humerus_RX'
  'left_forearm': 'L elbow_RX'
  'left_forearm_end': 'L wrist_RX'
  'right_collar': 'L collar_RX'
  'right_upper_arm': 'R humerus_RX'
  'right_forearm':  'R elbow_RX'
  'right_forearm_end': 'R wrist_RX'

BONE_END_AT_JOINT:
  'hip': 'lower back_RX'
  'torso': 'L collar_RX'
  'neck': 'head_RX'
  'neck_end': ''
  'left_collar': 'L humerus_RX'
  'left_upper_arm': 'L elbow_RX'
  'left_forearm': 'L wrist_RX'
  'left_forearm_end': ''
  'right_collar': 'R humerus_RX'
  'right_upper_arm': 'R elbow_RX'
  'right_forearm': 'R wrist_RX'
  'right_forearm_end': ''

ROTATION_IN_DEGREE: true

FPS: 100

joint_name_pattern_csv: '(\w+)_RX'

# postprocessing config, see defautl config in transformation pipeline.py to check which values must be provided
postprocessing : 
  'fps': 100
  'median_filter' : true
  'interpolation_type' : 'polynomial'     # polynomial or linear
  'polynomial_degree' : 2                 # ignored if filter_type is 'linear'
  'median_window' : 10                    # size of window for moving median 
  'lowpass_filter' : true
  'lowpass_critical_frequency' : 3
  'order_lowpass_filter' : 4
  'use_bidirectional_filter' : true       # if set to yes, scipy sosfiltfilt will be used, otherwise sosfilt

